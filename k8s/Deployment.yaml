---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app:{app_name}
    release: "1.0.0"
    env: dev
  name: {app_name}
  namespace: {ns}
spec:
  replicas: {replica}
  selector:
    matchLabels:
      app: {app_name}
      release: "1.0.0"
      env: dev  
  strategy:
    rollingUpdate:
      maxSurge: 50%
      maxUnavailable: 50%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: {app_name}
        release: "1.0.0"
        env: dev
    spec:
      containers:
      - image: {image}
        imagePullPolicy: Always
        name: {app_name}
        ports:
        - containerPort: 80
        resources:
            requests:
              memory: "50Mi"
              cpu: "100m"
            limits:
              memory: "100Mi"
              cpu: "200m"
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      nodeSelector:
        env: dev
        platform: apps
      tolerations:
      - key: "platform"
        operator: "Equal"
        value: "apps"
        effect: "NoSchedule"
      - key: "env"
        operator: "Equal"
        value: "dev"
        effect: "NoSchedule"
status: {}
